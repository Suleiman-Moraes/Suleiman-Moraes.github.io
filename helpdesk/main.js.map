{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/footer/footer.component.css","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/header/header.component.css","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/menu/menu.component.css","webpack:///./src/app/components/menu/menu.component.html","webpack:///./src/app/components/menu/menu.component.ts","webpack:///./src/app/components/security/auth.guard.ts","webpack:///./src/app/components/security/auth.interceptor.ts","webpack:///./src/app/components/security/login/login.component.css","webpack:///./src/app/components/security/login/login.component.html","webpack:///./src/app/components/security/login/login.component.ts","webpack:///./src/app/components/summary/summary.component.css","webpack:///./src/app/components/summary/summary.component.html","webpack:///./src/app/components/summary/summary.component.ts","webpack:///./src/app/components/ticket-detail/ticket-detail.component.css","webpack:///./src/app/components/ticket-detail/ticket-detail.component.html","webpack:///./src/app/components/ticket-detail/ticket-detail.component.ts","webpack:///./src/app/components/ticket-list/ticket-list.component.css","webpack:///./src/app/components/ticket-list/ticket-list.component.html","webpack:///./src/app/components/ticket-list/ticket-list.component.ts","webpack:///./src/app/components/ticket-new/ticket-new.component.css","webpack:///./src/app/components/ticket-new/ticket-new.component.html","webpack:///./src/app/components/ticket-new/ticket-new.component.ts","webpack:///./src/app/components/user-list/user-list.component.css","webpack:///./src/app/components/user-list/user-list.component.html","webpack:///./src/app/components/user-list/user-list.component.ts","webpack:///./src/app/components/user-new/user-new.component.css","webpack:///./src/app/components/user-new/user-new.component.html","webpack:///./src/app/components/user-new/user-new.component.ts","webpack:///./src/app/dialog.service.ts","webpack:///./src/app/model/summary.model.ts","webpack:///./src/app/model/ticket.model.ts","webpack:///./src/app/model/user.model.ts","webpack:///./src/app/services/helpdesk.api.ts","webpack:///./src/app/services/shared.service.ts","webpack:///./src/app/services/ticket.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-header [hidden]=\\\"!showTemplate\\\"></app-header>\\n<app-menu [hidden]=\\\"!showTemplate\\\"></app-menu>\\n<!-- Content Wrapper. Contains page content -->\\n<div [ngClass]=\\\"showContentWrapper()\\\">\\n  <!-- Content Header (Page header) -->\\n  <section class=\\\"content-header\\\">\\n  </section>\\n  <!-- Main content -->\\n  <section class=\\\"content\\\">\\n    <router-outlet></router-outlet>\\n  </section>\\n</div>\\n<app-footer [hidden]=\\\"!showTemplate\\\"></app-footer>\"","import { SharedService } from './services/shared.service';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  showTemplate: boolean = false;\n  public shared: SharedService;\n\n  constructor(){\n    this.shared = SharedService.getInstance();\n  }\n\n  ngOnInit(){\n    this.shared.showTemplate.subscribe(\n      show => this.showTemplate = show\n    );\n  }\n\n  showContentWrapper(){\n    return{\n      'content-wrapper': this.shared.isLoggedIn()\n    }\n  }\n}\n","import { DialogService } from './dialog.service';\nimport { AuthGuard } from './components/security/auth.guard';\nimport { AuthInterceptor } from './components/security/auth.interceptor';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { SharedService } from './services/shared.service';\nimport { UserService } from './services/user.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { MenuComponent } from './components/menu/menu.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/security/login/login.component';\nimport { routes } from './app.routes';\nimport { UserNewComponent } from './components/user-new/user-new.component';\nimport { UserListComponent } from './components/user-list/user-list.component';\nimport { TicketNewComponent } from './components/ticket-new/ticket-new.component';\nimport { TicketService } from './services/ticket.service';\nimport { TicketListComponent } from './components/ticket-list/ticket-list.component';\nimport { TicketDetailComponent } from './components/ticket-detail/ticket-detail.component';\nimport { SummaryComponent } from './components/summary/summary.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    MenuComponent,\n    FooterComponent,\n    HomeComponent,\n    LoginComponent,\n    UserNewComponent,\n    UserListComponent,\n    TicketNewComponent,\n    TicketListComponent,\n    TicketDetailComponent,\n    SummaryComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    routes\n  ],\n  providers: [\n    UserService, \n    SharedService,\n    DialogService,\n    TicketService,\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { SummaryComponent } from './components/summary/summary.component';\r\nimport { TicketDetailComponent } from './components/ticket-detail/ticket-detail.component';\r\nimport { TicketListComponent } from './components/ticket-list/ticket-list.component';\r\nimport { TicketNewComponent } from './components/ticket-new/ticket-new.component';\r\nimport { UserListComponent } from './components/user-list/user-list.component';\r\nimport { UserNewComponent } from './components/user-new/user-new.component';\r\nimport { LoginComponent } from './components/security/login/login.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ModuleWithProviders } from '@angular/core';\r\nimport { AuthGuard } from './components/security/auth.guard';\r\n\r\nexport const ROUTES: Routes = [\r\n    { path: '', component: HomeComponent, canActivate: [AuthGuard]},\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'user-new', component: UserNewComponent, canActivate: [AuthGuard] },\r\n    { path: 'user-new/:id', component: UserNewComponent, canActivate: [AuthGuard] },\r\n    { path: 'user-list', component: UserListComponent, canActivate: [AuthGuard] },\r\n    { path: 'ticket-new', component: TicketNewComponent, canActivate: [AuthGuard] },\r\n    { path: 'ticket-new/:id', component: TicketNewComponent, canActivate: [AuthGuard] },\r\n    { path: 'ticket-list', component: TicketListComponent, canActivate: [AuthGuard] },\r\n    { path: 'ticket-detail/:id', component: TicketDetailComponent, canActivate: [AuthGuard] },\r\n    { path: 'summary', component: SummaryComponent, canActivate: [AuthGuard] }\r\n]\r\n\r\nexport const routes: ModuleWithProviders = RouterModule.forRoot(ROUTES);","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<footer class=\\\"main-footer\\\">\\n  <div class=\\\"pull-right hidden-xs\\\">\\n    <b>Version</b> 2.4.0\\n  </div>\\n  <strong>Copyright &copy; 2019 <a href=\\\"https://adminlte.io\\\">Suleiman Moraes</a>.</strong> All rights\\n  reserved.\\n</footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<header class=\\\"main-header\\\">\\n\\n  <!-- Logo -->\\n  <a [routerLink]=\\\"['/']\\\"  class=\\\"logo\\\">\\n    <!-- mini logo for sidebar mini 50x50 pixels -->\\n    <span class=\\\"logo-mini\\\"><b>Help</b></span>\\n    <!-- logo for regular state and mobile devices -->\\n    <span class=\\\"logo-lg\\\"><b>Help Desk</b></span>\\n  </a>\\n\\n  <!-- Header Navbar: style can be found in header.less -->\\n  <nav class=\\\"navbar navbar-static-top\\\">\\n    <!-- Sidebar toggle button-->\\n    <a href=\\\"#\\\" class=\\\"sidebar-toggle\\\" data-toggle=\\\"push-menu\\\" role=\\\"button\\\">\\n      <span class=\\\"sr-only\\\">Toggle navigation</span>\\n    </a>\\n    <!-- Navbar Right Menu -->\\n    <div class=\\\"navbar-custom-menu\\\">\\n      <p style=\\\"color: white\\\">{{ shared.user.email }} - {{ shared.user.profileEnum }} | <button class=\\\"btn btn-link\\\" (click)=\\\"signOut()\\\"><font style=\\\"color: white\\\">Sign Out</font></button></p>\\n    </div>\\n\\n  </nav>\\n</header>\"","import { SharedService } from 'src/app/services/shared.service';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/model/user.model';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  shared: SharedService;\n\n  constructor() { \n    this.shared = SharedService.getInstance();\n    this.shared.user = new User('', '', '', '');\n  }\n\n  ngOnInit() {\n  }\n\n  signOut(): void{\n    this.shared.token = null;\n    this.shared.user = null;\n    window.location.href = '/login';\n    window.location.reload();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  Uai come!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWVudS9tZW51LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- Left side column. contains the logo and sidebar -->\\n<aside class=\\\"main-sidebar\\\">\\n  <!-- sidebar: style can be found in sidebar.less -->\\n  <section class=\\\"sidebar\\\">\\n    <!-- sidebar menu: : style can be found in sidebar.less -->\\n    <ul class=\\\"sidebar-menu\\\" data-widget=\\\"tree\\\">\\n      <li class=\\\"treeview\\\" *ngIf=\\\"shared.user.profileEnum == 'ADMIN'\\\">\\n        <a href=\\\"#\\\">\\n          <i class=\\\"fa fa-edit\\\"></i> <span>User</span>\\n          <span class=\\\"pull-right-container\\\">\\n            <i class=\\\"fa fa-angle-left pull-right\\\"></i>\\n          </span>\\n        </a>\\n        <ul class=\\\"treeview-menu\\\">\\n          <li><a [routerLink]=\\\"['/user-list']\\\"><i class=\\\"fa fa-circle-o\\\"></i> List</a></li>\\n          <li><a [routerLink]=\\\"['/user-new']\\\"><i class=\\\"fa fa-circle-o\\\"></i> New User</a></li>\\n        </ul>\\n      </li>\\n\\n      <li class=\\\"treeview\\\" *ngIf=\\\"shared.user.profileEnum != 'ADMIN'\\\">\\n        <a href=\\\"#\\\">\\n          <i class=\\\"fa fa-edit\\\"></i> <span>Ticket</span>\\n          <span class=\\\"pull-right-container\\\">\\n            <i class=\\\"fa fa-angle-left pull-right\\\"></i>\\n          </span>\\n        </a>\\n        <ul class=\\\"treeview-menu\\\">\\n          <li><a [routerLink]=\\\"['/ticket-list']\\\"><i class=\\\"fa fa-circle-o\\\"></i> List</a></li>\\n          <li *ngIf=\\\"shared.user.profileEnum == 'CUSTOMER'\\\"><a [routerLink]=\\\"['/ticket-new']\\\"><i class=\\\"fa fa-circle-o\\\"></i> New Ticket</a></li>\\n        </ul>\\n      </li>\\n\\n      <li class=\\\"treeview\\\">\\n        <a href=\\\"#\\\">\\n          <i class=\\\"fa fa-edit\\\"></i> <span>Summary</span>\\n          <span class=\\\"pull-right-container\\\">\\n            <i class=\\\"fa fa-angle-left pull-right\\\"></i>\\n          </span>\\n        </a>\\n        <ul class=\\\"treeview-menu\\\">\\n          <li><a [routerLink]=\\\"['/summary']\\\"><i class=\\\"fa fa-circle-o\\\"></i> To view</a></li>\\n        </ul>\\n      </li>\\n    </ul>\\n  </section>\\n  <!-- /.sidebar -->\\n</aside>\"","import { SharedService } from 'src/app/services/shared.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  shared: SharedService;\n\n  constructor() { \n    this.shared = SharedService.getInstance();\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { SharedService } from './../../services/shared.service';\r\nimport { CanActivate, RouterStateSnapshot, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n    \r\n    public shared: SharedService;\r\n\r\n    constructor(private router: Router){\r\n        this.shared = SharedService.getInstance();\r\n    }\r\n\r\n    canActivate(\r\n        route: ActivatedRouteSnapshot, \r\n        state: RouterStateSnapshot):  Observable<boolean> | Promise<boolean> | boolean{\r\n            if(this.shared.isLoggedIn()){\r\n                return true;\r\n            }\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor{\r\n\r\n    shared: SharedService;\r\n\r\n    constructor(){\r\n        this.shared = SharedService.getInstance();\r\n    }\r\n    \r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>{\r\n        let authRequest: any;\r\n\r\n        if(this.shared.isLoggedIn()){\r\n            authRequest = req.clone({\r\n                setHeaders:{\r\n                    'Authorization': this.shared.token\r\n                }\r\n            });\r\n            return next.handle(authRequest);\r\n        }else{\r\n            return next.handle(req);\r\n        }\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2VjdXJpdHkvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"col-md-4\\\" style=\\\"margin-left: 20%\\\">\\n  <!-- Horizontal Form -->\\n  <div class=\\\"box box-info\\\">\\n    <div class=\\\"box-header with-border\\\">\\n      <h3 class=\\\"box-title\\\">Help Desk | Login</h3>\\n    </div>\\n    <!-- /.box-header -->\\n    <!-- form start -->\\n    <form class=\\\"form-horizontal\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"login()\\\">\\n      <div class=\\\"alert alert-error\\\" role=\\\"alert\\\" *ngIf=\\\"message\\\">\\n        <strong>E-mail ou senha são inválidos.</strong>\\n      </div>\\n      <div class=\\\"box-body\\\">\\n        <div [ngClass]=\\\"getFormGroupClass(email.invalid, email.dirty)\\\">\\n          <label for=\\\"inputEmail\\\" class=\\\"col-sm-2 control-label\\\">Email</label>\\n\\n          <div class=\\\"col-sm-10\\\">\\n            <input type=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" class=\\\"form-control\\\" name=\\\"email\\\" id=\\\"inputEmail\\\" #email=\\\"ngModel\\\"\\n              placeholder=\\\"Email\\\" email>\\n            <span class=\\\"help-block\\\" *ngIf=\\\"email.invalid && email.dirty\\\">E-mail é inválido</span>\\n          </div>\\n        </div>\\n\\n        <div [ngClass]=\\\"getFormGroupClass(password.invalid, password.dirty)\\\">\\n          <label for=\\\"inputPassword\\\" class=\\\"col-sm-2 control-label\\\">Password</label>\\n\\n          <div class=\\\"col-sm-10\\\">\\n            <input type=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" class=\\\"form-control\\\" id=\\\"inputPassword\\\" name=\\\"password\\\"\\n              #password=\\\"ngModel\\\" placeholder=\\\"Password\\\" required>\\n            <span class=\\\"help-block\\\" *ngIf=\\\"password.invalid && password.dirty\\\">Password é requerido</span>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- /.box-body -->\\n      <div class=\\\"box-footer\\\">\\n        <button type=\\\"submit\\\" (click)=\\\"cancelLogin()\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n        <button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-info pull-right\\\">Sign in</button>\\n      </div>\\n      <!-- /.box-footer -->\\n    </form>\\n  </div>\"","import { CurrentUser } from './../../../model/current-user.model';\nimport { UserService } from './../../../services/user.service';\nimport { SharedService } from './../../../services/shared.service';\nimport { User } from './../../../model/user.model';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  user = new User('', '', '', '');\n  shared: SharedService;\n  message: string;\n\n  constructor(\n    private userService: UserService,\n    private router: Router\n  ){\n    this.shared = SharedService.getInstance();\n  }\n\n  ngOnInit() {\n  }\n\n  login(){\n    this.message = '';\n    this.userService.login(this.user).subscribe((userAuthentication: CurrentUser) => {\n      this.shared.token = userAuthentication.token;\n      this.shared.user = userAuthentication.user;\n      this.shared.user.profileEnum = this.shared.user.profileEnum.substring(5);\n      this.shared.showTemplate.emit(true);\n      this.router.navigate(['/']);\n    }, err => {\n      this.shared.token = null;\n      this.shared.user = null;\n      this.shared.showTemplate.emit(false);\n      this.message = 'Erro';\n    });\n  }\n\n  cancelLogin(){\n    this.message = '';\n    this.user = new User('', '', '', '');\n    window.location.href = '/login';\n    window.location.reload();\n  }\n\n  getFormGroupClass(isInvalid: boolean, isDirty): {}{\n    return{\n      'form-group': true,\n      'has-error': isInvalid && isDirty,\n      'has-sucess': !isInvalid && isDirty\n    };\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc3VtbWFyeS9zdW1tYXJ5LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"col-md-10\\\" style=\\\"margin-left: 0%\\\">\\n  <div [ngClass]=\\\"classCss\\\" role=\\\"alert\\\" *ngIf=\\\"message\\\">\\n    <strong>{{ message.text }}</strong>\\n  </div>\\n  <div class=\\\"box box-info\\\">\\n    <div class=\\\"box-header with-border\\\">\\n      <h3>Summary</h3>\\n    </div>\\n    <div class=\\\"box-body\\\">\\n      <ul class=\\\"list-group list-group-unbordered\\\">\\n        <li class=\\\"list-group-item\\\">\\n          <b>New: </b>\\n          <span class=\\\"pull-right\\\"><span>{{ summary?.amountNovo }}</span></span>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <b>Resolved: </b>\\n          <span class=\\\"pull-right\\\"><span>{{ summary?.amountResolvido }}</span></span>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <b>Approved: </b>\\n          <span class=\\\"pull-right\\\"><span>{{ summary?.amountAprovado }}</span></span>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <b>Disapproved: </b>\\n          <span class=\\\"pull-right\\\"><span>{{ summary?.amountDesaprovado }}</span></span>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <b>Assigned: </b>\\n          <span class=\\\"pull-right\\\"><span>{{ summary?.amountDesignado }}</span></span>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <b>Closed: </b>\\n          <span class=\\\"pull-right\\\"><span>{{ summary?.amountFechado }}</span></span>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\"","import { TicketService } from 'src/app/services/ticket.service';\nimport { Summary } from './../../model/summary.model';\nimport { Component, OnInit } from '@angular/core';\nimport { ResponseApi } from 'src/app/model/response-api';\n\n@Component({\n  selector: 'app-summary',\n  templateUrl: './summary.component.html',\n  styleUrls: ['./summary.component.css']\n})\nexport class SummaryComponent implements OnInit {\n\n  summary: Summary = new Summary();\n  message: {};\n  classCss: {};\n\n  constructor(\n    private ticketService: TicketService,\n  ) {}\n\n  ngOnInit() {\n    this.ticketService.summary().subscribe((responseApi: ResponseApi) => {\n      this.summary = responseApi.data;\n    }, err => {\n      this.showMessage({\n        type: 'error',\n        text: err['error']['errors'][0]\n      });\n    });\n  }\n\n  private showMessage(message: {type: string, text: string}): void{\n    this.message = message;\n    this.buildClasses(message.type);\n    setTimeout(() => {\n      this.message = undefined;\n    }, 3000);\n  }\n\n  private buildClasses(type: string): void{\n    this.classCss = {\n      'alert': true\n    }\n    this.classCss['alert-' + type] = true;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGlja2V0LWRldGFpbC90aWNrZXQtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"col-md-10\\\" style=\\\"margin-left: 0%\\\">\\n  <div class=\\\"box box-info\\\">\\n    <div class=\\\"box-header with-border\\\">\\n      <h3>Detail Ticket</h3>\\n    </div>\\n    <form class=\\\"form-horizontal\\\">\\n      <div [ngClass]=\\\"classCss\\\" role=\\\"alert\\\" *ngIf=\\\"message\\\">\\n        <strong>{{ message.text }}</strong>\\n      </div>\\n      <div class=\\\"box-body\\\">\\n        <ul class=\\\"list-group list-group-unbordered\\\">\\n          <li class=\\\"list-group-item\\\">\\n            <b>Number: </b> <span>{{ ticket.numero }}</span>\\n            <span class=\\\"pull-right\\\"><b>Title:</b><span>{{ ticket.titulo }}</span></span>\\n          </li>\\n          <li class=\\\"list-group-item\\\">\\n            <b>Priority: </b> <span>{{ ticket.prioridadeEnum }}</span>\\n            <span class=\\\"pull-right\\\"><b>Create By:</b><span>{{ ticket?.user?.email }}</span></span>\\n          </li>\\n          <li class=\\\"list-group-item\\\">\\n            <b>Status: </b> <span>{{ ticket.statusEnum }}</span>\\n            <span class=\\\"pull-right\\\"><b>Assigned To:</b><span>{{ ticket?.assignedUser?.email }}</span></span>\\n          </li>\\n          <li class=\\\"list-group-item\\\">\\n            <b>Date: </b> <span>{{ ticket.data | date:'dd/MM/yyyy' }}</span>\\n            <span class=\\\"pull-right\\\"><b>Description:</b><span>{{ ticket.descricao }}</span></span>\\n          </li>\\n          <li class=\\\"list-group-item\\\">\\n            <span><img [src]=\\\"ticket.imagem\\\" width=\\\"450px\\\" height=\\\"370px\\\"></span>\\n            <span class=\\\"pull-right\\\">\\n              <table class=\\\"table table-bordered\\\">\\n                <tr>\\n                  <th>User Change</th>\\n                  <th>Date Change Status</th>\\n                  <th>Status</th>\\n                </tr>\\n                <tr *ngFor=\\\"let change of ticket.listaChangeStatus\\\">\\n                  <td>{{ change?.userChange.email }}</td>\\n                  <td>{{ change?.dataAlteracao | date:'dd/MM/yyyy HH:mm:ss' }}</td>\\n                  <td>{{ change?.statusEnum }}</td>\\n                </tr>\\n              </table>\\n            </span>\\n          </li>\\n        </ul>\\n      </div>\\n      <div class=\\\"box-footer\\\">\\n        <button *ngIf=\\\"shared.user.profileEnum == 'TECHNICIAN' && ticket.statusEnum == 'NOVO'\\\" \\n          (click)=\\\"changeStatus('DESIGNADO')\\\"\\n          class=\\\"btn btn-primary\\\">Accept</button>\\n\\n        <button *ngIf=\\\"shared.user.profileEnum == 'TECHNICIAN' && (ticket.statusEnum == 'DESIGNADO' || ticket.statusEnum == 'DESAPROVADO')\\\" \\n          (click)=\\\"changeStatus('RESOLVIDO')\\\"\\n          class=\\\"btn btn-primary\\\">Solve</button>\\n\\n        <button *ngIf=\\\"shared.user.profileEnum == 'CUSTOMER' && ticket.statusEnum == 'RESOLVIDO'\\\" \\n          (click)=\\\"changeStatus('APROVADO')\\\"\\n          class=\\\"btn btn-primary\\\">Approve</button>\\n\\n        <button *ngIf=\\\"shared.user.profileEnum == 'CUSTOMER' && ticket.statusEnum == 'RESOLVIDO'\\\" \\n          (click)=\\\"changeStatus('DESAPROVADO')\\\"\\n          class=\\\"btn btn-primary\\\">Disapprove</button>\\n\\n        <button *ngIf=\\\"shared.user.profileEnum == 'TECHNICIAN' && ticket.statusEnum == 'APROVADO'\\\" \\n          (click)=\\\"changeStatus('FECHADO')\\\"\\n          class=\\\"btn btn-primary\\\">Close</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","import { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { Ticket } from 'src/app/model/ticket.model';\nimport { SharedService } from 'src/app/services/shared.service';\nimport { TicketService } from 'src/app/services/ticket.service';\nimport { ResponseApi } from 'src/app/model/response-api';\n\n@Component({\n  selector: 'app-ticket-detail',\n  templateUrl: './ticket-detail.component.html',\n  styleUrls: ['./ticket-detail.component.css']\n})\nexport class TicketDetailComponent implements OnInit {\n\n  ticket = new Ticket('', '', 0, '', '', '', '', '', null, null, null);\n  shared: SharedService;\n  message: {};\n  classCss: {};\n\n  constructor(\n    private ticketService: TicketService,\n    private route: ActivatedRoute\n  ) {\n    this.shared = SharedService.getInstance();\n  }\n\n  ngOnInit() {\n    let id: string = this.route.snapshot.params['id'];\n    if (id != undefined) {\n      this.findById(id);\n    }\n  }\n\n  findById(id: string) {\n    this.ticketService.findById(id).subscribe((responseApi: ResponseApi) => {\n      this.ticket = responseApi.data;\n      this.ticket.data = new Date(this.ticket.data).toISOString();\n    }, err => {\n      this.showMessage({\n        type: 'error',\n        text: err['error']['errors'][0]\n      });\n    });\n  }\n\n  changeStatus(status: string): void {\n    this.ticketService.changeStatus(status, this.ticket).subscribe((responseApi: ResponseApi) => {\n      this.ticket = responseApi.data;\n      this.ticket.data = new Date(this.ticket.data).toISOString();\n      this.showMessage({\n        type: 'success',\n        text: 'Successfully changed status'\n      });\n    }, err => {\n      this.showMessage({\n        type: 'error',\n        text: err['error']['errors'][0]\n      });\n    });\n  }\n\n  private showMessage(message: { type: string, text: string }): void {\n    this.message = message;\n    this.buildClasses(message.type);\n    setTimeout(() => {\n      this.message = undefined;\n    }, 3000);\n  }\n\n  private buildClasses(type: string): void {\n    this.classCss = {\n      'alert': true\n    }\n    this.classCss['alert-' + type] = true;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGlja2V0LWxpc3QvdGlja2V0LWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div [ngClass]=\\\"classCss\\\" role=\\\"alert\\\" *ngIf=\\\"message\\\">\\n  <strong>{{ message.text }}</strong>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-8\\\">\\n    <div class=\\\"box\\\">\\n      <div class=\\\"box-header with-border\\\">\\n        <h3 class=\\\"box-title\\\">Ticket List</h3>\\n      </div>\\n      <!-- /.box-header -->\\n\\n      <div class=\\\"box-body\\\">\\n\\n        <div class=\\\"form-group\\\" *ngIf=\\\"shared.user.profileEnum == 'TECHNICIAN'\\\">\\n          <div class=\\\"checkbox\\\">\\n            <label>\\n              <input type=\\\"checkbox\\\" [(ngModel)]=\\\"assignedToMe\\\" name=\\\"assignedToMe\\\" id=\\\"assignedToMe\\\">\\n              <b>Assigned to me</b>\\n            </label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputNumber\\\" class=\\\"col-sm-2 control-label\\\">Number</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"ticketFilter.numero\\\" class=\\\"form-control\\\" name=\\\"numero\\\" id=\\\"inputNumber\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTitulo\\\" class=\\\"col-sm-2 control-label\\\">Título</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"ticketFilter.titulo\\\" class=\\\"form-control\\\" name=\\\"titulo\\\" id=\\\"inputTitulo\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputStatus\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <select [(ngModel)]=\\\"ticketFilter.statusEnum\\\" class=\\\"form-control select2\\\" id=\\\"inputStatus\\\" name=\\\"status\\\"\\n              style=\\\"width: 100%\\\">\\n              <option selected=\\\"selected\\\" disabled=\\\"disabled\\\" value>Selecione</option>\\n              <option>NOVO</option>\\n              <option>DESIGNADO</option>\\n              <option>RESOLVIDO</option>\\n              <option>APROVADO</option>\\n              <option>DESAPROVADO</option>\\n              <option>FECHADO</option>\\n            </select>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"inputPrioridadeEnum\\\" class=\\\"col-sm-2 control-label\\\">Prioridade</label>\\n            <div class=\\\"col-sm-10\\\">\\n              <select [(ngModel)]=\\\"ticketFilter.prioridadeEnum\\\" class=\\\"form-control select2\\\" id=\\\"inputPrioridadeEnum\\\"\\n                name=\\\"prioridadeEnum\\\" style=\\\"width: 100%\\\">\\n                <option selected=\\\"selected\\\" disabled=\\\"disabled\\\" value>Selecione</option>\\n                <option>ALTA</option>\\n                <option>NORMAL</option>\\n                <option>BAIXA</option>\\n              </select>\\n            </div>\\n          </div>\\n\\n        </div>\\n        <div class=\\\"box-footer\\\">\\n          <button class=\\\"btn btn-info pull-left\\\" (click)=\\\"cleanFilter()\\\">Clean Filter</button>\\n          <button style=\\\"margin-left: 10px\\\" class=\\\"btn btn-info pull-right\\\" (click)=\\\"filter()\\\">Filter</button>\\n        </div>\\n\\n        <div class=\\\"box-body\\\">\\n          <table class=\\\"table table-bordered\\\">\\n            <tr>\\n              <th>Número</th>\\n              <th>Título</th>\\n              <th>Prioridade</th>\\n              <th>Status</th>\\n              <th>Owner</th>\\n              <th style=\\\"width: 10px\\\" *ngIf=\\\"shared.user.profileEnum == 'CUSTOMER'\\\">&nbsp;</th>\\n              <th style=\\\"width: 10px\\\" *ngIf=\\\"shared.user.profileEnum == 'CUSTOMER'\\\">&nbsp;</th>\\n              <th style=\\\"width: 10px\\\">&nbsp;</th>\\n            </tr>\\n            <tr *ngFor=\\\"let ticket of listTicket\\\">\\n              <td>{{ ticket.numero }}</td>\\n              <td>{{ ticket.titulo }}</td>\\n              <td>{{ ticket.prioridadeEnum }}</td>\\n              <td>{{ ticket.statusEnum }}</td>\\n              <td>{{ ticket.user.email }}</td>\\n              <td *ngIf=\\\"shared.user.profileEnum == 'CUSTOMER'\\\">\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"edit(ticket.id)\\\">Edit</button>\\n              </td>\\n              <td *ngIf=\\\"shared.user.profileEnum == 'CUSTOMER'\\\">\\n                <button class=\\\"btn btn-danger\\\" (click)=\\\"delete(ticket.id)\\\">Delete</button>\\n              </td>\\n              <td><button class=\\\"btn btn-success\\\" (click)=\\\"detail(ticket.id)\\\">Detail</button></td>\\n            </tr>\\n          </table>\\n        </div>\\n        <!-- /.box-body -->\\n        <div class=\\\"box-footer clearfix\\\">\\n          <ul class=\\\"pagination pagination-sm no-margin pull-right\\\">\\n            <li><a href=\\\"\\\" (click)=\\\"setPreviousPage($event)\\\">&laquo;</a></li>\\n            <li *ngFor=\\\"let p of pages; let i = index\\\">\\n              <a [ngClass]=\\\"{'pagination-focus': i == page}\\\" href=\\\"\\\" (click)=\\\"setPage(i, $event)\\\">{{ i+1 }}</a>\\n            </li>\\n            <li><a href=\\\"\\\" (click)=\\\"setNextPage($event)\\\">&raquo;</a></li>\\n          </ul>\\n        </div>\\n      </div>\\n      <!-- /.box -->\\n    </div>\\n  </div>\"","import { Router } from '@angular/router';\nimport { DialogService } from './../../dialog.service';\nimport { TicketService } from './../../services/ticket.service';\nimport { Component, OnInit } from '@angular/core';\nimport { SharedService } from 'src/app/services/shared.service';\nimport { Ticket } from 'src/app/model/ticket.model';\nimport { ResponseApi } from 'src/app/model/response-api';\n\n@Component({\n  selector: 'app-ticket-list',\n  templateUrl: './ticket-list.component.html',\n  styleUrls: ['./ticket-list.component.css']\n})\nexport class TicketListComponent implements OnInit {\n\n  assignedToMe: boolean = false;\n  page: number = 0;\n  count: number = 5;\n  pages: Array<number>;\n  shared: SharedService;\n  message: {};\n  classCss: {}; \n  listTicket = [];\n  ticketFilter = new Ticket('', '', 0, '', '', '', '', '', null, null, null);\n  private uninformed: string = 'uninformed';\n\n  constructor(\n    private dialogService: DialogService,\n    private ticketService: TicketService,\n    private router: Router\n  ) { \n    this.shared = SharedService.getInstance();\n  }\n\n  ngOnInit() {\n    this.findAll(this.page, this.count);\n  }\n\n  findAll(page: number, count: number){\n    this.ticketService.findAll(page, count).subscribe((responseApi: ResponseApi) =>{\n      this.listTicket = responseApi['data']['content'];\n      this.pages = new Array(responseApi['data']['totalPages']);\n    }, err =>{\n      this.showMessage({\n        type: 'error',\n        text: err['error']['errors'][0]\n      });\n    });\n  }\n\n  filter(): void{\n    this.page = 0;\n    this.count = 5;\n    this.ticketService.findByParams(this.page, this.count, this.assignedToMe, this.ticketFilter).subscribe((responseApi: ResponseApi) => {\n      this.ticketFilter.titulo = this.ticketFilter.titulo == this.uninformed ? '' : this.ticketFilter.titulo;\n      this.listTicket = responseApi['data']['content'];\n      this.pages = new Array(responseApi['data']['totalPages']);\n    }, err => {\n      this.showMessage({\n        type: 'error',\n        text: err['error']['errors'][0]\n      });\n    });\n  }\n\n  cleanFilter(): void {\n    this.assignedToMe = false;\n    this.page = 0;\n    this.count = 5;\n    this.ticketFilter = new Ticket('', '', 0, '', '', '', '', '', null, null, null);\n    this.findAll(this.page, this.count);\n  }\n\n  edit(id: string){\n    this.router.navigate(['/ticket-new', id])\n  }\n\n  detail(id: string){\n    this.router.navigate(['/ticket-detail', id]);\n  }\n\n  delete(id: string){\n    this.dialogService.confirm(' Você realmente deseja deletar o Ticket? ').then((candelete: boolean) => {\n      if(candelete){\n        this.message = {};\n        this.ticketService.delete(id).subscribe((responseApi: ResponseApi) =>{\n          this.showMessage({\n            type: 'success',\n            text: 'Record delete'\n          });\n          this.findAll(this.page, this.count);\n        }, err =>{\n          this.showMessage({\n            type: 'error',\n            text: err['error']['errors'][0]\n          });\n        });\n      }\n    });\n  }\n\n  setNextPage(event: any){\n    event.preventDefault();\n    if(this.page + 1 < this.pages.length){\n      this.page = this.page + 1;\n      this.findAll(this.page, this.count);\n    }\n  }\n\n  setPreviousPage(event: any){\n    event.preventDefault();\n    if(this.page > 0){\n      this.page = this.page - 1;\n      this.findAll(this.page, this.count);\n    }\n  }\n\n  setPage(i, event: any){\n    event.preventDefault();\n    this.page = i;\n    this.findAll(this.page, this.count);\n  }\n\n  private showMessage(message: {type: string, text: string}): void{\n    this.message = message;\n    this.buildClasses(message.type);\n    setTimeout(() => {\n      this.message = undefined;\n    }, 3000);\n  }\n\n  private buildClasses(type: string): void{\n    this.classCss = {\n      'alert': true\n    }\n    this.classCss['alert-' + type] = true;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGlja2V0LW5ldy90aWNrZXQtbmV3LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"col-md-6\\\" style=\\\"margin-left: 0%\\\">\\n  <!-- Horizontal Form -->\\n  <div class=\\\"box box-info\\\">\\n    <div class=\\\"box-header with-border\\\">\\n      <h3 class=\\\"box-title\\\">New Ticket</h3>\\n    </div>\\n    <!-- /.box-header -->\\n    <!-- form start -->\\n    <form class=\\\"form-horizontal\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"register()\\\" novalidate>\\n      <div [ngClass]=\\\"classCss\\\" role=\\\"alert\\\" *ngIf=\\\"message\\\">\\n        <strong>{{ message.text }}</strong>\\n      </div>\\n      <div class=\\\"box-body\\\">\\n\\n        <!-- Título -->\\n        <div [ngClass]=\\\"getFormGroupClass(titulo.invalid, titulo.dirty)\\\">\\n          <label for=\\\"inputTitulo\\\" class=\\\"col-sm-2 control-label\\\">Título</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"ticket.titulo\\\" class=\\\"form-control\\\" name=\\\"titulo\\\" id=\\\"inputTitulo\\\" #titulo=\\\"ngModel\\\"\\n              placeholder=\\\"Titulo\\\" required>\\n            <span class=\\\"help-block\\\" *ngIf=\\\"titulo.invalid && titulo.dirty\\\">Título é requerido</span>\\n          </div>\\n        </div>\\n\\n        <!-- prioridadeEnum -->\\n        <div [ngClass]=\\\"getFormGroupClass(prioridadeEnum.invalid, prioridadeEnum.dirty)\\\">\\n          <label for=\\\"inputPrioridadeEnum\\\" class=\\\"col-sm-2 control-label\\\">Prioridade</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <select [(ngModel)]=\\\"ticket.prioridadeEnum\\\" class=\\\"form-control select2\\\" id=\\\"inputPrioridadeEnum\\\" name=\\\"prioridadeEnum\\\"\\n              #prioridadeEnum=\\\"ngModel\\\" style=\\\"width: 100%\\\" required>\\n              <option value>Selecione</option>\\n              <option>ALTA</option>\\n              <option>NORMAL</option>\\n              <option>BAIXA</option>\\n            </select>\\n            <span class=\\\"help-block\\\" *ngIf=\\\"prioridadeEnum.invalid && prioridadeEnum.dirty\\\">Prioridade é requerido</span>\\n          </div>\\n        </div>\\n\\n        <!-- descricao -->\\n        <div [ngClass]=\\\"getFormGroupClass(descricao.invalid, descricao.dirty)\\\">\\n          <label for=\\\"inputDescricao\\\" class=\\\"col-sm-2 control-label\\\">Descrição</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <textarea [(ngModel)]=\\\"ticket.descricao\\\" class=\\\"form-control\\\" name=\\\"descricao\\\" id=\\\"inputDescricao\\\"\\n              #descricao=\\\"ngModel\\\" placeholder=\\\"Descrição\\\" required rows=\\\"3\\\"></textarea>\\n            <span class=\\\"help-block\\\" *ngIf=\\\"descricao.invalid && descricao.dirty\\\">Descrição é requerido</span>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputDescription\\\" class=\\\"col-sm-2 control-label\\\">Imagem</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <img [src]=\\\"ticket.imagem\\\" width=\\\"50%\\\" height=\\\"50%\\\">\\n            <input type=\\\"file\\\" id=\\\"image\\\" (change)=\\\"onFileChange($event)\\\">\\n          </div>\\n        </div>\\n\\n      </div>\\n      <!-- /.box-body -->\\n      <div class=\\\"box-footer\\\">\\n        <button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-info pull-right\\\">Submit</button>\\n      </div>\\n      <!-- /.box-footer -->\\n    </form>\\n  </div>\\n</div>\"","import { TicketService } from './../../services/ticket.service';\nimport { SharedService } from './../../services/shared.service';\nimport { Ticket } from './../../model/ticket.model';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { ResponseApi } from 'src/app/model/response-api';\n\n@Component({\n  selector: 'app-ticket-new',\n  templateUrl: './ticket-new.component.html',\n  styleUrls: ['./ticket-new.component.css']\n})\nexport class TicketNewComponent implements OnInit {\n\n  @ViewChild(\"form\")\n  form: NgForm\n\n  ticket = new Ticket('', '', 0, '', '', '', '', '', null, null, null);\n  shared: SharedService;\n  message: {};\n  classCss: {};\n\n  constructor(\n    private ticketService: TicketService,\n    private route: ActivatedRoute\n  ) { \n    this.shared = SharedService.getInstance();\n  }\n\n  ngOnInit() {\n    let id: string = this.route.snapshot.params['id'];\n    if(id != undefined){\n      this.findById(id);\n    }\n  }\n\n  findById(id: string){\n    this.ticketService.findById(id).subscribe((responseApi: ResponseApi) => {\n      this.ticket = responseApi.data;\n    }, err => {\n      this.showMessage({\n        type: 'error',\n        text: err['error']['errors'][0]\n      });\n    });\n  }\n\n  register(){\n    this.message = {};\n    this.ticketService.createOrUpdate(this.ticket).subscribe((responseApi: ResponseApi) => {\n      this.ticket = new Ticket('', '', 0, '', '', '', '', '', null, null, null);\n      let ticket: Ticket = responseApi.data;\n      this.form.resetForm();\n      this.showMessage({\n        type: 'success',\n        text: `Registered ${ticket.titulo} successfully`\n      });\n    }, err => {\n      this.showMessage({\n        type: 'error',\n        text: err['error']['errors'][0]\n      });\n    });\n  }\n\n  onFileChange(event): void{\n    if(event.target.files[0].size > 2000000){\n      this.showMessage({\n        type: 'error',\n        text: 'Maximum image size is 2 MB'\n      });\n    } else {\n      this.ticket.imagem = '';\n      var reader = new FileReader();\n      reader.onloadend = (e: Event) => {\n          this.ticket.imagem = reader.result as string;\n      }\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  }\n\n  private showMessage(message: {type: string, text: string}): void{\n    this.message = message;\n    this.buildClasses(message.type);\n    setTimeout(() => {\n      this.message = undefined;\n    }, 3000);\n  }\n\n  private buildClasses(type: string): void{\n    this.classCss = {\n      'alert': true\n    }\n    this.classCss['alert-' + type] = true;\n  }\n\n  getFormGroupClass(isInvalid: boolean, isDirty): {}{\n    return{\n      'form-group': true,\n      'has-error': isInvalid && isDirty,\n      'has-sucess': !isInvalid && isDirty\n    };\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci1saXN0L3VzZXItbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div [ngClass]=\\\"classCss\\\" role=\\\"alert\\\" *ngIf=\\\"message\\\">\\n  <strong>{{ message.text }}</strong>\\n</div>  \\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-8\\\">\\n    <div class=\\\"box\\\">\\n      <div class=\\\"box-header with-border\\\">\\n        <h3 class=\\\"box-title\\\">User List</h3>\\n      </div>\\n      <!-- /.box-header -->\\n      <div class=\\\"box-body\\\">\\n        <table class=\\\"table table-bordered\\\">\\n          <tr>\\n            <th>Email</th>\\n            <th>Profile</th>\\n            <th style=\\\"width: 10px\\\">&nbsp;</th>\\n            <th style=\\\"width: 10px\\\">&nbsp;</th>\\n          </tr>\\n          <tr *ngFor=\\\"let user of listUser\\\">\\n            <td>{{ user.email }}</td>\\n            <td>{{ user.profileEnum }}</td>\\n            <td><button class=\\\"btn btn-primary\\\" (click)=\\\"edit(user.id)\\\">Edit</button></td>\\n            <td><button class=\\\"btn btn-danger\\\" (click)=\\\"delete(user.id)\\\">Delete</button></td>\\n          </tr>\\n        </table>\\n      </div>\\n      <!-- /.box-body -->\\n      <div class=\\\"box-footer clearfix\\\">\\n        <ul class=\\\"pagination pagination-sm no-margin pull-right\\\">\\n          <li><a href=\\\"\\\" (click)=\\\"setPreviousPage($event)\\\">&laquo;</a></li>\\n          <li *ngFor=\\\"let p of pages; let i = index\\\">\\n            <a [ngClass]=\\\"{'pagination-focus': i == page}\\\" href=\\\"\\\" (click)=\\\"setPage(i, $event)\\\">{{ i+1 }}</a>\\n          </li>\\n          <li><a href=\\\"\\\" (click)=\\\"setNextPage($event)\\\">&raquo;</a></li>\\n        </ul>\\n      </div>\\n    </div>\\n    <!-- /.box -->\\n  </div>\\n</div>\"","import { Router } from '@angular/router';\nimport { UserService } from './../../services/user.service';\nimport { DialogService } from './../../dialog.service';\nimport { SharedService } from 'src/app/services/shared.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ResponseApi } from 'src/app/model/response-api';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  page: number = 0;\n  count: number = 5;\n  pages: Array<number>;\n  shared: SharedService;\n  message: {};\n  classCss: {};\n  listUser = [];\n\n  constructor(\n    private dialogService: DialogService,\n    private userService: UserService,\n    private router: Router\n  ) { \n    this.shared = SharedService.getInstance();\n  }\n\n  ngOnInit() {\n    this.findAll(this.page, this.count);\n  }\n\n  findAll(page: number, count: number){\n    this.userService.findAll(page, count).subscribe((responseApi: ResponseApi) =>{\n      this.listUser = responseApi['data']['content'];\n      this.pages = new Array(responseApi['data']['totalPages']);\n    }, err =>{\n      this.showMessage({\n        type: 'error',\n        text: err['error']['errors'][0]\n      });\n    });\n  }\n\n  edit(id: string){\n    this.router.navigate(['/user-new', id])\n  }\n\n  delete(id: string){\n    this.dialogService.confirm(' Você realmente deseja deletar o Usuário? ').then((candelete: boolean) => {\n      if(candelete){\n        this.message = {};\n        this.userService.delete(id).subscribe((responseApi: ResponseApi) =>{\n          this.showMessage({\n            type: 'success',\n            text: 'Record delete'\n          });\n          this.findAll(this.page, this.count);\n        }, err =>{\n          this.showMessage({\n            type: 'error',\n            text: err['error']['errors'][0]\n          });\n        });\n      }\n    });\n  }\n\n  setNextPage(event: any){\n    event.preventDefault();\n    if(this.page + 1 < this.pages.length){\n      this.page = this.page + 1;\n      this.findAll(this.page, this.count);\n    }\n  }\n\n  setPreviousPage(event: any){\n    event.preventDefault();\n    if(this.page > 0){\n      this.page = this.page - 1;\n      this.findAll(this.page, this.count);\n    }\n  }\n\n  setPage(i, event: any){\n    event.preventDefault();\n    this.page = i;\n    this.findAll(this.page, this.count);\n  }\n\n  private showMessage(message: {type: string, text: string}): void{\n    this.message = message;\n    this.buildClasses(message.type);\n    setTimeout(() => {\n      this.message = undefined;\n    }, 3000);\n  }\n\n  private buildClasses(type: string): void{\n    this.classCss = {\n      'alert': true\n    }\n    this.classCss['alert-' + type] = true;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci1uZXcvdXNlci1uZXcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"col-md-6\\\" style=\\\"margin-left: 0%\\\">\\n  <!-- Horizontal Form -->\\n  <div class=\\\"box box-info\\\">\\n    <div class=\\\"box-header with-border\\\">\\n      <h3 class=\\\"box-title\\\">New User</h3>\\n    </div>\\n    <!-- /.box-header -->\\n    <!-- form start -->\\n    <form class=\\\"form-horizontal\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"register()\\\">\\n      <div [ngClass]=\\\"classCss\\\" role=\\\"alert\\\" *ngIf=\\\"message\\\">\\n        <strong>{{ message.text }}</strong>\\n      </div>\\n      <div class=\\\"box-body\\\">\\n        <div [ngClass]=\\\"getFormGroupClass(email.invalid, email.dirty)\\\">\\n          <label for=\\\"inputEmail\\\" class=\\\"col-sm-2 control-label\\\">Email</label>\\n\\n          <div class=\\\"col-sm-10\\\">\\n            <input type=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" class=\\\"form-control\\\" name=\\\"email\\\" id=\\\"inputEmail\\\" #email=\\\"ngModel\\\"\\n              placeholder=\\\"Email\\\" email>\\n            <span class=\\\"help-block\\\" *ngIf=\\\"email.invalid && email.dirty\\\">E-mail é inválido</span>\\n          </div>\\n        </div>\\n\\n        <div [ngClass]=\\\"getFormGroupClass(password.invalid, password.dirty)\\\">\\n          <label for=\\\"inputPassword\\\" class=\\\"col-sm-2 control-label\\\">Password</label>\\n\\n          <div class=\\\"col-sm-10\\\">\\n            <input type=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" class=\\\"form-control\\\" id=\\\"inputPassword\\\" name=\\\"password\\\"\\n              #password=\\\"ngModel\\\" placeholder=\\\"Password\\\" required>\\n            <span class=\\\"help-block\\\" *ngIf=\\\"password.invalid && password.dirty\\\">Password é requerido</span>\\n          </div>\\n        </div>\\n\\n        <div [ngClass]=\\\"getFormGroupClass(profileEnum.invalid, profileEnum.dirty)\\\">\\n          <label for=\\\"inputProfileEnum\\\" class=\\\"col-sm-2 control-label\\\">Profile</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <select [(ngModel)]=\\\"user.profileEnum\\\"\\n              class=\\\"form-control select2\\\" id=\\\"inputProfileEnum\\\" name=\\\"profileEnum\\\"\\n              #profileEnum=\\\"ngModel\\\" style=\\\"width: 100%\\\" required>\\n              <option>ROLE_ADMIN</option>\\n              <option>ROLE_CUSTOMER</option>\\n              <option>ROLE_TECHNICIAN</option>\\n            </select>\\n            <span class=\\\"help-block\\\" *ngIf=\\\"profileEnum.invalid && profileEnum.dirty\\\">Profile é requerido</span>\\n          </div>\\n        </div>\\n\\n      </div>\\n      <!-- /.box-body -->\\n      <div class=\\\"box-footer\\\">\\n        <button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-info pull-right\\\">Submit</button>\\n      </div>\\n      <!-- /.box-footer -->\\n    </form>\\n  </div>\"","import { UserService } from './../../services/user.service';\nimport { SharedService } from './../../services/shared.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { User } from 'src/app/model/user.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { ResponseApi } from 'src/app/model/response-api';\n\n@Component({\n  selector: 'app-user-new',\n  templateUrl: './user-new.component.html',\n  styleUrls: ['./user-new.component.css']\n})\nexport class UserNewComponent implements OnInit {\n\n  @ViewChild(\"form\")\n  form: NgForm\n\n  user = new User('', '', '', '');\n  shared: SharedService;\n  message: {};\n  classCss: {};\n\n  constructor(\n    private userService: UserService,\n    private route: ActivatedRoute\n  ) {\n    this.shared = SharedService.getInstance();\n  }\n\n  ngOnInit() {\n    let id: string = this.route.snapshot.params['id'];\n    if(id != undefined){\n      this.findById(id);\n    }\n  }\n\n  findById(id: string){\n    this.userService.findById(id).subscribe((responseApi: ResponseApi) => {\n      this.user = responseApi.data;\n      this.user.password = '';\n    }, err => {\n      this.showMessage({\n        type: 'error',\n        text: err['error']['errors'][0]\n      });\n    });\n  }\n\n  register(){\n    this.message = {};\n    this.userService.createOrUpdate(this.user).subscribe((responseApi: ResponseApi) => {\n      this.user = new User('', '', '', '');\n      let userRet: User = responseApi.data;\n      this.form.resetForm();\n      this.showMessage({\n        type: 'success',\n        text: `Registered ${userRet.email} successfully`\n      });\n    }, err => {\n      this.showMessage({\n        type: 'error',\n        text: err['error']['errors'][0]\n      });\n    });\n  }\n\n  private showMessage(message: {type: string, text: string}): void{\n    this.message = message;\n    this.buildClasses(message.type);\n    setTimeout(() => {\n      this.message = undefined;\n    }, 3000);\n  }\n\n  private buildClasses(type: string): void{\n    this.classCss = {\n      'alert': true\n    }\n    this.classCss['alert-' + type] = true;\n  }\n\n  getFormGroupClass(isInvalid: boolean, isDirty): {}{\n    return{\n      'form-group': true,\n      'has-error': isInvalid && isDirty,\n      'has-sucess': !isInvalid && isDirty\n    };\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DialogService{\r\n\r\n    confirm(message?: string){\r\n        return new Promise( resolve => {\r\n            return resolve(window.confirm(message || 'Confirm ?'));\r\n        })\r\n    }\r\n}","export class Summary{\r\n    public amountNovo: number;\r\n    public amountResolvido: number;\r\n    public amountAprovado: number;\r\n    public amountDesaprovado: number;\r\n    public amountDesignado: number;\r\n    public amountFechado: number;\r\n}","import { ChangeStatus } from './change-status.model';\r\nimport { User } from './user.model';\r\nexport class Ticket{\r\n    constructor(\r\n        public id: string,\r\n        public data: string,\r\n        public numero: number,\r\n        public titulo: string,\r\n        public descricao: string,\r\n        public imagem: string,\r\n        public statusEnum: string,\r\n        public prioridadeEnum: string,\r\n        public user: User,\r\n        public assignedUser: User,\r\n        public listaChangeStatus: Array<ChangeStatus>\r\n    ){}\r\n}","export class User{\r\n    constructor(\r\n        public id: string,\r\n        public email: string,\r\n        public password: string,\r\n        public profileEnum: string,\r\n    ){}\r\n}","var HELP_DESK: string = 'https://helpdesk-web-service.herokuapp.com';\r\nvar HELP_DESK_API_COMPLEMENTO: string = '/api';\r\nvar HELP_DESK_API_AUTH_COMPLEMENTO: string = '/auth';\r\nvar HELP_DESK_API_USER_COMPLEMENTO: string = '/user';\r\nvar HELP_DESK_API_TICKET_COMPLEMENTO: string = '/ticket';\r\nvar HELP_DESK_API_SUMMARY_COMPLEMENTO: string = '/summary';\r\nexport const HELP_DESK_API: string = `${HELP_DESK}${HELP_DESK_API_COMPLEMENTO}`;\r\nexport const HELP_DESK_API_AUTH: string = `${HELP_DESK}${HELP_DESK_API_COMPLEMENTO}${HELP_DESK_API_AUTH_COMPLEMENTO}`;\r\nexport const HELP_DESK_API_USER: string = `${HELP_DESK}${HELP_DESK_API_COMPLEMENTO}${HELP_DESK_API_USER_COMPLEMENTO}`;\r\nexport const HELP_DESK_API_TICKET: string = `${HELP_DESK}${HELP_DESK_API_COMPLEMENTO}${HELP_DESK_API_TICKET_COMPLEMENTO}`;\r\nexport const HELP_DESK_API_SUMMARY: string = `${HELP_DESK}${HELP_DESK_API_COMPLEMENTO}${HELP_DESK_API_TICKET_COMPLEMENTO}${HELP_DESK_API_SUMMARY_COMPLEMENTO}`;","import { User } from './../model/user.model';\nimport { Injectable, EventEmitter } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\n  public static instance: SharedService = null;\n  user: User;\n  token: string;\n  showTemplate = new EventEmitter<boolean>();\n\n  constructor() { \n    return SharedService.instance = SharedService.instance || this;\n  }\n\n  public static getInstance(){\n    if(this.instance == null){\n      this.instance = new SharedService();\n    }\n    return this.instance;\n  }\n\n  isLoggedIn():boolean{\n    if(this.user == null){\n      return false;\n    }\n    return this.user.email.trim() != '';\n  }\n}\n","import { HELP_DESK_API_TICKET, HELP_DESK_API_SUMMARY } from './helpdesk.api';\nimport { Ticket } from './../model/ticket.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TicketService {\n\n  constructor(private http: HttpClient) { }\n\n  createOrUpdate(ticket: Ticket){\n    if(ticket.id != null && ticket.id.trim() != ''){\n      return this.http.put(`${HELP_DESK_API_TICKET}`, ticket);\n    }\n    else{\n      ticket.id = null;\n      ticket.statusEnum = 'NOVO';\n      return this.http.post(`${HELP_DESK_API_TICKET}`, ticket);\n    }\n  }\n\n  findAll(page: number, count: number){\n    return this.http.get(`${HELP_DESK_API_TICKET}/${page}/${count}`);\n  }\n\n  findById(id: string) {\n    return this.http.get(`${HELP_DESK_API_TICKET}/${id}`);\n  }\n\n  delete(id: string) {\n    return this.http.delete(`${HELP_DESK_API_TICKET}/${id}`);\n  }\n\n  changeStatus(status: string, ticket: Ticket){\n    return this.http.put(`${HELP_DESK_API_TICKET}/${ticket.id}/${status}`,ticket);\n  }\n\n  findByParams(page: number, count: number, assigned: boolean, ticket: Ticket){\n    var naoInformado: string = 'uninformed';\n    ticket.numero = ticket == null ? 0 : ticket.numero;\n    ticket.titulo = ticket.titulo == '' ? naoInformado : ticket.titulo;\n    ticket.statusEnum = ticket.statusEnum == '' ? naoInformado : ticket.statusEnum;\n    ticket.prioridadeEnum = ticket.prioridadeEnum == '' ? naoInformado : ticket.prioridadeEnum;\n    return this.http.get(`${HELP_DESK_API_TICKET}/${page}/${count}/${ticket.numero}/${ticket.titulo}/${ticket.statusEnum}/${ticket.prioridadeEnum}/${assigned}`);\n  }\n\n  summary(){\n    return this.http.get(`${HELP_DESK_API_SUMMARY}`);\n  }\n}\n","import { HELP_DESK_API_AUTH, HELP_DESK_API_USER } from './helpdesk.api';\nimport { User } from './../model/user.model';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  login(user: User) {\n    return this.http.post(`${HELP_DESK_API_AUTH}`, user);\n  }\n\n  createOrUpdate(user: User) {\n    if (user.id != null && user.id.trim() != '') {\n      return this.http.put(`${HELP_DESK_API_USER}`, user);\n    }\n    else {\n      user.id = null;\n      return this.http.post(`${HELP_DESK_API_USER}`, user);\n    }\n  }\n\n  findAll(page: number, count: number) {\n    return this.http.get(`${HELP_DESK_API_USER}/${page}/${count}`);\n  }\n\n  findById(id: string) {\n    return this.http.get(`${HELP_DESK_API_USER}/${id}`);\n  }\n\n  delete(id: string) {\n    return this.http.delete(`${HELP_DESK_API_USER}/${id}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}